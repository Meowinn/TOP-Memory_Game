[{"/home/equinox/repos/TOP-Memory_game/src/index.js":"1","/home/equinox/repos/TOP-Memory_game/src/App.js":"2","/home/equinox/repos/TOP-Memory_game/src/components/tiles.js":"3"},{"size":256,"mtime":1676258280437,"results":"4","hashOfConfig":"5"},{"size":302,"mtime":1676430785795,"results":"6","hashOfConfig":"5"},{"size":4744,"mtime":1678429317146,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"15eh1qj",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"11"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/equinox/repos/TOP-Memory_game/src/index.js",[],[],[],"/home/equinox/repos/TOP-Memory_game/src/App.js",["20"],[],"import react from \"react\";\nimport {Tiles} from \"./components/tiles\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div id=\"App\">\n      <div id=\"header\">\n        <div id=\"title\">鬼滅の刃 Kimetsu no Yaiba memory game</div>\n      </div>\n      <Tiles />\n    </div>\n  );\n}\n\nexport default App;\n","/home/equinox/repos/TOP-Memory_game/src/components/tiles.js",["21"],[],"import React, { useState, useEffect } from \"react\";\n\nconst Tiles = () => {\n    const [divArray, setDivArray] = useState([\n        <div key={1} onClick={handleClick} id=\"1\" className=\"imgWrapper\"><img src={require(\"../imgs/giyu.png\")} alt=\"giyu.png\" /><div className=\"picName\">Giyu</div></div>,\n        <div key={2} onClick={handleClick} id=\"2\" className=\"imgWrapper\"><img src={require(\"../imgs/gyomei.png\")} alt=\"gyomei.png\" /><div className=\"picName\">Gyomei</div></div>,\n        <div key={3} onClick={handleClick} id=\"3\" className=\"imgWrapper\"><img src={require(\"../imgs/kanao.png\")} alt=\"kanao.png\" /><div className=\"picName\">Kanao</div></div>,\n        <div key={4} onClick={handleClick} id=\"4\" className=\"imgWrapper\"><img src={require(\"../imgs/mitsuri.png\")} alt=\"mitsuri.png\" /><div className=\"picName\">Mitsuri</div></div>,\n        <div key={5} onClick={handleClick} id=\"5\" className=\"imgWrapper\"><img src={require(\"../imgs/muichiro.png\")} alt=\"muichiro.png\" /><div className=\"picName\">Muichiro</div></div>,\n        <div key={6} onClick={handleClick} id=\"6\" className=\"imgWrapper\"><img src={require(\"../imgs/obanai.png\")} alt=\"obanai.png\" /><div className=\"picName\">Obanai</div></div>,\n        <div key={7} onClick={handleClick} id=\"7\" className=\"imgWrapper\"><img src={require(\"../imgs/sakonji.png\")} alt=\"sakonji.png\" /><div className=\"picName\">Sakonji</div></div>,\n        <div key={8} onClick={handleClick} id=\"8\" className=\"imgWrapper\"><img src={require(\"../imgs/sanemi.png\")} alt=\"sanemi.png\" /><div className=\"picName\">Sanemi</div></div>,\n        <div key={9} onClick={handleClick} id=\"9\" className=\"imgWrapper\"><img src={require(\"../imgs/shinobu.png\")} alt=\"shinobu.png\" /><div className=\"picName\">Shinobu</div></div>,\n        <div key={10} onClick={handleClick} id=\"10\" className=\"imgWrapper\"><img src={require(\"../imgs/tanjiro.png\")} alt=\"tanjiro.png\" /><div className=\"picName\">Tanjiro</div></div>,\n        <div key={11} onClick={handleClick} id=\"11\" className=\"imgWrapper\"><img src={require(\"../imgs/tengen.png\")} alt=\"tengen.png\" /><div className=\"picName\">Tengen</div></div>,\n        <div key={12} onClick={handleClick} id=\"12\" className=\"imgWrapper\"><img src={require(\"../imgs/zenitsu.png\")} alt=\"zenitsu.png\" /><div className=\"picName\">Zenitsu</div></div>,\n    ]);\n\n    let [bestScore, setBestScore] = useState(0);\n    const [scoreArray, setScoreArray] = useState([]);\n    const [pointArray, setPointArray] = useState([0]);\n    let [score, setScore] = useState(<ScoreDiv bestScore={bestScore} scoreVal={\"Get points by clicking on an image but don't click on any more than once!\"} />);\n\n    useEffect(() => {\n        const randomize = () => {\n            let copy = [...divArray];\n            copy.sort(() => 0.5 - Math.random());\n            setDivArray(copy)\n        };\n\n        const divButtons = document.querySelectorAll('.imgWrapper');\n\n        for (const divButton of divButtons) {\n            divButton.addEventListener('click', randomize)\n        };\n\n        return () => {\n            for (const divButton of divButtons) {\n                divButton.removeEventListener('click', randomize)\n            };\n        }\n    });\n\n    function handleClick(e) {\n        setScoreArray(scoreArray.push(e.currentTarget.getAttribute(\"id\")));\n\n        let result = false;\n        result = scoreArray.some((items, index) => {\n            return scoreArray.indexOf(items) !== index\n        });\n\n        if (result == true) {\n            setScore(<ScoreDiv bestScore={bestScore} gameOver=\"Game Over! Click any image to play again! \" scoreVal={\"Your final Score: \" + (scoreArray.length - 1)} />);\n\n            setPointArray(\n                pointArray.push(scoreArray.length - 1),\n            )\n            document.querySelector('#scoreDiv').classList.add('gameOver');\n            setScoreArray([scoreArray.splice(0, scoreArray.length)]);\n\n        } else {\n            document.querySelector('#scoreDiv').classList.remove('gameOver');\n            document.querySelector('#scoreDiv').classList.add('gameOn');\n            setScore(<ScoreDiv bestScore={bestScore} scoreVal={\"Score: \" + scoreArray.length} />);\n        };\n\n        setBestScore(\n            bestScore = Math.max(...pointArray),\n        )\n    };\n\n    return (\n        <div>\n            {score}\n            <div id=\"tilesWrapper\">\n                <div id=\"tileContainer\">\n                    {divArray.map(element => element)}\n                </div>\n            </div>\n        </div>\n    )\n};\n\nconst ScoreDiv = (props) => {\n    return (\n        <div>\n            <div id=\"best\">Best Score: {props.bestScore}</div>\n            <div id='scoreDiv'>\n                <div id=\"gameInfo\">{props.gameOver} {props.scoreVal}</div></div>\n        </div>\n    )\n};\n\nexport { Tiles };\n\n\n\n",{"ruleId":"22","severity":1,"message":"23","line":1,"column":8,"nodeType":"24","messageId":"25","endLine":1,"endColumn":13},{"ruleId":"26","severity":1,"message":"27","line":52,"column":20,"nodeType":"28","messageId":"29","endLine":52,"endColumn":22},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]